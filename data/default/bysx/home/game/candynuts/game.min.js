function completeLvl(a, b) {
    var c = lvls[a] ? lvls[a].stars : 1, d = config.lvl[a - 1].reqNuts ? config.lvl[a - 1].reqNuts : config.reqNuts;
    b >= d[0] && (c = 2), b >= d[1] && (c = 3), lvls[a] = {stars: c};
    var e;
    -1 == indexOf(__open, a + 1) && (e = a + 1, __open.push(e));
    for (var f = 0; f < obs.length; f++)obs[f].change(a, lvls[a].stars, e);
    return window.localStorage.setItem(a.toString(), JSON.stringify(lvls[a])), window.localStorage.setItem("__open", "[" + __open.toString() + "]"), lvls[a]
}
function readStorage() {
    flag[0] = !1;
    for (var a = 1; a <= config.lvl.length; a++)lvls[a] = JSON.parse(window.localStorage.getItem(a.toString())), flag[a] = !1;
    __open = JSON.parse(window.localStorage.getItem("__open")) ? JSON.parse(window.localStorage.getItem("__open")) : new Array, flag = window.localStorage.getItem("flag") ? JSON.parse(window.localStorage.getItem("flag")) : flag;
    var b = window.localStorage.getItem("numPlay");
    numPlay = b ? b : 0
}
function setFlag(a) {
    flag[a] = !0, window.localStorage.setItem("flag", "[" + flag.toString() + "]")
}
function setNumPlay() {
    numPlay++, 5 == numPlay && (numPlay = 0), window.localStorage.setItem("numPlay", numPlay)
}
function getLvlStorage(a) {
    return lvls[a]
}
function getOpen() {
    return __open
}
function getFlag(a) {
    return flag && flag[a] ? flag[a] : void 0
}
function getNumPlay() {
    return numPlay
}
function observerStorage(a) {
    obs.push(a)
}
function Logic(a) {
    function b() {
        var b;
        b = config.lvl[a].newCandyCoor ? config.lvl[a].newCandyCoor : config.newCandyCoor;
        for (var c = 0; c < b[0].length; c++) {
            var e = d();
            e.y = b[0][c] / __koefDisplay, e.x = -30 / __koefDisplay, A.push(e)
        }
        for (var c = 0; c < b[1].length; c++) {
            var e = d();
            e.y = b[1][c] / __koefDisplay, e.x = 670 / __koefDisplay, A.push(e)
        }
    }

    function c(a) {
        for (var b, c, d = a.length; d; b = Math.floor(Math.random() * d), c = a[--d], a[d] = a[b], a[b] = c);
        return a
    }

    function d() {
        for (var b, d = config.suffix, e = Math.round(Math.random() * (d.length - 1)), g = config.colors, h = config.numRandShoot + 1; h > config.numRandShoot;) {
            var i = Math.round(Math.random() * (config.lvl[a].colors.length - 1));
            h = c(config.lvl[a].colors)[i]
        }
        var j = h, k = null, l = null;
        return j > config.numRand && (k = g[j - 1]), g[j - 1] && d[e] && (l = g[j - 1] + d[e]), b = f(l, 1, null, null, k)
    }

    function e(b) {
        if (b)for (var c = 0; c < b.length; c++) {
            var d = Math.round(Math.random() * (u / 2 - 1)), e = Math.round(Math.random() * (v - 1));
            y[d][e] = f(b[c], 1)
        }
        for (var g = new Array, h = new Array, c = 0; w > c; c++)for (var i = 0; x > i; i++) {
            y[c][i] = null;
            var j = config.colors, k = config.suffix, l = _field.lvls[a][c][i], m = null, n = null;
            if (0 != l) {
                if (l)if (l > config.numRand)9 == l ? m = "nut" : n = j[l - 1]; else {
                    var o = Math.round(Math.random() * (k.length - 1));
                    j[l - 1] && k[o] && !m && (m = j[l - 1] + k[o])
                } else m = "center", s = c, t = i;
                y[c][i] || g[i] ? y[c][i] && y[c][i].orient && "vert" != y[c][i].orient && (g[i] = !0) : (y[c][i] = f(m, 1, null, null, n), h.push({
                    i: c,
                    j: i
                }))
            }
        }
        return h
    }

    function f(a, b, c, d, e) {
        var f = {url: a, kind: e ? e : config.objects[a].color, part: b, orient: c, select: !1, vis: d};
        return f
    }

    function g(a, b, c, d) {
        for (var e = new Array, f = new Array, g = new Array, h = new Array, i = 0, j = 0; w > j; j++)for (var k = 0; x > k; k++)y[j][k] && (1 == y[j][k].select && ("bomb" == y[j][k].kind ? h.push({
            i: j,
            j: k
        }) : e.push({
            i: j,
            j: k
        }), 1 == y[j][k].part && i++), 1 == y[j][k].orphan && ("nut" == y[j][k].kind ? g.push({
            i: j,
            j: k
        }) : f.push({i: j, j: k})));
        for (var j = 0; j < e.length; j++)y[e[j].i][e[j].j].select = !1;
        if (d || !(i < config.numForDel)) {
            for (var l = new Array, j = 0; j < B.length; j++) {
                var l = function (a, b, c, d) {
                    B[a].del(c, b, "fall"), B[a].del(d, b, "fall")
                };
                if (h.length > 0) {
                    var m = function (b, c, d, f) {
                        B[b].del(e, c, null, l, [b, c, d, f], a, i, 0)
                    };
                    B[j].del(h, d, null, m, [j, d, f, g], a, i)
                } else B[j].del(e, d, null, l, [j, d, f, g], a, i)
            }
            for (var j = 0; j < B.length; j++)B[j].calc(i + f.length, g.length);
            return e.length
        }
    }

    function h(a, b) {
        var c = y[a][b].vis;
        return c || ("goriz" == y[a][b].orient ? c = y[a][b - 1].vis : "vert" == y[a][b].orient && (c = y[a - 1][b].vis)), c
    }

    function i(a, b, c, d, e) {
        var f, g = new Array;
        return f = b % 2 == 0 ? -1 : 1, j(a - 1, b, c, g, d, e), j(a + 1, b, c, g, d, e), j(a, b - 1, c, g, d, e), j(a, b + 1, c, g, d, e), j(a + f, b - 1, c, g, d, e), j(a + f, b + 1, c, g, d, e), g
    }

    function j(a, b, c, d, e, f) {
        if (k(a, b) && y[b][a])if (c)y[b][a].kind != c || y[b][a].select || y[b][a].block || "nut" == y[b][a].kind || "center" == y[b][a].kind || (e && e.push({
            i: b,
            j: a
        }), y[b][a].select = !0, i(a, b, y[b][a].kind, e)); else if (!y[b][a].select) {
            if (f && "nut" == y[b][a].kind)return;
            d.push({i: b, j: a})
        }
    }

    function k(a, b) {
        return a >= 0 && b >= 0 && x > a && w > b
    }

    function l(a, b, c) {
        y[a][b].orphan = !1;
        for (var d = i(b, a, null, null, c), a = 0; a < d.length; a++)y[d[a].i][d[a].j].orphan && l(d[a].i, d[a].j)
    }

    function m(a, b) {
        for (var c = a - 1; a + 2 > c; c++)o(c, b - 1, b + 2);
        for (var d = b - 1; b + 2 > d; d++)p(d, a - 1, a + 2)
    }

    function n(a, b) {
        for (var c = 0; w > c; c++)for (var d = 0; x > d; d++)y[c][d] && y[c][d].kind == y[a][b].k && "but" != y[c][d].kind && (y[c][d].select = !0);
        y[a][b].select = !0
    }

    function o(a, b, c) {
        for (var d = b; c > d; d++)y[a] && y[a][d] && "but" != y[a][d].kind && (y[a][d].select || (y[a][d].select = !0, r(a, d, !0)), "vert" == y[a][d].orient && (1 == y[a][d].part ? y[a + 1][d].select = !0 : y[a - 1][d].select = !0))
    }

    function p(a, b, c) {
        for (var d = b; c > d; d++)y[d] && y[d][a] && "but" != y[d][a].kind && (y[d][a].select || (y[d][a].select = !0, r(d, a, !0)), "goriz" == y[d][a].orient && (1 == y[d][a].part ? y[d][a + 1].select = !0 : y[d][a - 1].select = !0))
    }

    function q(a, b, c, d) {
        var e;
        e = a % 2 == 0 ? -1 : 1;
        for (var f = [b - 1, b + 1, b, b, b + e, b + e], g = [a, a, a - 1, a + 1, a - 1, a + 1], j = 0, k = new Array, l = new Array, m = 0; m < g.length; m++)if (y[g[m]][f[m]]) {
            var n = h(g[m], f[m]), o = n.getPar();
            if (o.bomb && !y[g[m]][f[m]].select && q(g[m], f[m], !0), c)y[a][b].select = !0, -1 == indexOf(l, {
                i: a,
                j: b
            }) && l.push({
                i: a,
                j: b
            }), "nut" != y[g[m]][f[m]].kind && "center" != y[g[m]][f[m]].kind && l.push({i: g[m], j: f[m]}); else {
                var p = y[g[m]][f[m]].kind;
                if (y[a][b].select = !0, "univ" == p && !y[g[m]][f[m]].select)return void q(g[m], f[m], null, d);
                i(b, a, p, k), k.length > j && (!d || d && d == p) && (j = k.length, l = k);
                for (var r = 0; r < k.length; r++)y[k[r].i][k[r].j].select = !1;
                k = new Array
            }
        }
        for (var r = 0; r < l.length; r++)y[l[r].i][l[r].j].select = !0
    }

    function r(a, b, c) {
        var c, d = h(a, b), e = d.getPar();
        if (e.deleted && !c) {
            var f;
            f = a % 2 == 0 ? -1 : 1;
            for (var g = [b - 1, b + 1, b, b, b + f, b + f], j = [a, a, a - 1, a + 1, a - 1, a + 1], k = !0, l = 0; l < j.length; l++)if (y[j[l]][g[l]] && "univ" == y[j[l]][g[l]].kind && !y[j[l]][g[l]].select && (y[a][b].select = !0, q(j[l], g[l], null, y[a][b].kind)), y[j[l]][g[l]]) {
                var r = h(j[l], g[l]), s = r.getPar();
                s.bomb && (q(j[l], g[l], !0), k = !1)
            }
            k && i(b, a, y[a][b].kind, null, !0)
        }
        return e.goriz && (o(a, 0, x), c = "goriz"), e.vert && (p(b, 0, w), c = "vert"), e.universal && q(a, b), e.bomb && (m(a, b), c = "bomb"), e.color && (n(a, b), c = "color"), c
    }

    for (var s, t, a = a - 1, u = 3, v = 3, w = _field.lvls[a].length, x = _field.lvls[a][0].length, y = new Array, z = (new Array, new Array), A = new Array, B = new Array, C = 0; w > C; C++)y[C] = new Array;
    e(config.lvl[a].butts, config.lvl[a].blocks), z[0] = d(), z[1] = d(), b(), this.update = function (a, b) {
        if (y[a][b] && !y[a][b].block && "center" != y[a][b].kind) {
            for (var c = h(a, b), d = (c.getPar(), r(a, b)), a = 0; w > a; a++)for (var b = 0; x > b; b++)y[a][b] && !y[a][b].select && (y[a][b].orphan = !0);
            l(s, t, !0);
            var e = g(c, a, b, d);
            return e
        }
    }, this.fall = function () {
        for (var a = 0; a < B.length; a++)B[a].grav()
    }, this.createBounce = function (a, b, c, d) {
        a && b && (kinda = "block_" + c + "_1x1", y[a][b] = f(kinda, 1, null, d, c))
    }, this.createNewShoot = function () {
        return z[1] = z[0], z[0] = d(), z
    }, this.endGame = function () {
        for (var a = 0; a < B.length; a++)B[a].gameOver()
    }, this.getMassive = function () {
        return y
    }, this.getShooter = function () {
        return z
    }, this.getNewCandy = function () {
        return A
    }, this.registerObserver = function (a) {
        B.push(a)
    }, this.createPerimetrCandy = function () {
        return A = new Array, b(), A
    }
}
function Block(a) {
    this.initialize();
    var b = a;
    b.parent.addChild(this), this.x = b.x, this.y = b.y, b.x = 0, b.y = 0;
    var c = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    c.gotoAndStop("lock"), c.x = 64 / __koefDisplay / 2 - c.getBounds().width / 2, c.y = 64 / __koefDisplay / 2 - c.getBounds().height / 2, this.addChild(b), this.addChild(c), this.rem = function () {
        this.parent && this.parent.removeChild(this), b.rem()
    }, this.getPar = function () {
        return {}
    }, this.getCandy = function () {
        return b
    }
}
function Bomb(a) {
    this.initialize();
    for (var b = a; b.getNumChildren() > 0;)b.removeChildAt(0);
    b.parent.addChild(this), this.x = b.x, this.y = b.y;
    var c = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    c.gotoAndStop("bomb"), this.addChild(c), this.rem = function (a) {
        this.removeChild(c), b.rem.apply(this, [a, null, "bomb", -73, -73])
    }, this.getPar = function () {
        return {bomb: !0}
    }, this.changeRect = function (a, c, d, e, f) {
        return b.changeRect.apply(this, [a, c, d, e, f])
    }
}
function Color(a) {
    this.initialize();
    var b = a;
    removeTween(b), b.parent.addChild(this), this.x = b.x, this.y = b.y, b.x = 0, b.y = 0;
    var c = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    c.gotoAndStop("star"), this.addChild(b), this.addChild(c), this.rem = function (a) {
        b.rem.apply(this, [a, null, "col", -49, -49])
    }, this.getPar = function () {
        return {color: !0}
    }, this.getCandy = function () {
        return b
    }
}
function Element(a) {
    function b(a, b) {
        var c = new createjs.Sprite(jsons["JSON2" + __disSuffiks], "star");
        d.addChild(c), c.y = -300 / __koefDisplay, c.play(), dragAndDrop(c), c.on("animationend", function (c) {
            c.target.stop(), a && a.apply(null, b)
        })
    }

    this.initialize();
    var c = a, d = this, e = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    e.gotoAndStop(c), this.addChild(e), this.rem = function (a, d, e, f, g) {
        this.removeAllChildren();
        var h, i, j;
        e ? (h = e, i = f / __koefDisplay, j = g / __koefDisplay) : (h = "b", i = -10 / __koefDisplay, j = -10 / __koefDisplay);
        var k = function (d, e) {
            var f = new createjs.Sprite(jsons["JSON2" + __disSuffiks], h);
            this.addChild(f), f.x = d, f.y = e, f.play(), f.on("animationend", function (d) {
                d.target.stop();
                var e = function () {
                    d.target.parent.parent && d.target.parent.parent.removeChild(d.target.parent)
                };
                "nut" == c ? (MusicCTRL.play("sound2"), b(e)) : e(), a && a.apply(null, [null, c])
            })
        };
        k.apply(this, [i, j]), "vert" == d && k.apply(this, [i, j + config.item.height / __koefDisplay]), "goriz" == d && k.apply(this, [i + config.item.width / __koefDisplay, j])
    }, this.getPar = function () {
        return {deleted: !0}
    }, this.changeImg = function (a) {
        for (; this.getNumChildren() > 0;)this.removeChildAt(0);
        e = new createjs.Sprite(jsons["JSON1" + __disSuffiks]), e.gotoAndStop("block_" + a + "_1x1"), e.x = 0, e.y = 0, this.addChild(e)
    }, this.changeRect = function (a, b, c, d, e) {
        var f = this.parent.localToLocal(this.x, this.y, a);
        return f.x < b || f.x > d || f.y < c || f.y > e ? {x: f.x, y: f.y} : void 0
    }
}
function GameField(a, b, c, d, e) {
    function f() {
        allList && (_.addEventListener("click", m), $.addEventListener("pressup", n), $.addEventListener("pressmove", o))
    }

    function g() {
        _.removeEventListener("click", m), $.removeEventListener("pressup", n), $.removeEventListener("pressmove", o)
    }

    function h(a, b, c, d, e, f, g, h) {
        if (H[a][b].vis) {
            if (H[a][b].vis == g) {
                var i = new FontText(score, "Center");
                i.setText("+" + h);
                var j = N.localToLocal(H[a][b].vis.x, H[a][b].vis.y, K);
                i.x = j.x, i.y = j.y, i.scaleX = .4, i.scaleY = .4, K.addChild(i), TweenTo(i, i.x, i.y - text_dy, text_speed, function (a) {
                    a.parent && a.parent.removeChild(a)
                }, [i], .2)
            }
            if ("fall" == f) {
                d++;
                var k = N.localToLocal(H[a][b].vis.x, H[a][b].vis.y, K);
                H[a][b].vis.x = k.x, H[a][b].vis.y = k.y, K.addChild(H[a][b].vis), TweenTo(H[a][b].vis, H[a][b].vis.x, 660 / __koefDisplay, timeFall / (660 / __koefDisplay / (660 / __koefDisplay - H[a][b].vis.y)), c, [H[a][b].vis, H[a][b].kind])
            } else"bomb" == e ? "bomb" == H[a][b].kind ? (console.log("bomb"), H[a][b].vis.rem(c, H[a][b].orient)) : N.removeChild(H[a][b].vis) : "color" == e ? (d++, H[a][b].vis.rem(c, H[a][b].orient, "col", 1, 1)) : (d++, N.addChild(H[a][b].vis), H[a][b].vis.rem(c, H[a][b].orient))
        }
        H[a][b] = null
    }

    function i(a, b, c, d) {
        var e;
        return a && 1 == a.part && (e = new Element(a.url), e.x = b, e.y = c, N.addChild(e), d && (e = new Block(e)), "univ" == a.kind && (e = new Universal(e)), "bomb" == a.kind && (e = new Bomb(e)), e.regX = C / 2, e.regY = D / 2), e
    }

    function j() {
        for (var a = 0, b = I.length, c = function () {
            b--, 0 == b && P && f()
        }, d = 0; d < I.length; d++)I[d].vis && I[d].vis.parent ? TweenTo(I[d].vis, I[d].vis.x, a - D, .2, c) : (I[d].vis = i(I[d], 0, 0, I[d].block), I[d].vis.x = WIDTHGAME / 2, I[d].vis.y = a - 2 * D, K.addChild(I[d].vis), TweenTo(I[d].vis, I[d].vis.x, a - D, .2, c)), a += D;
        e()
    }

    function k() {
        for (var a = 0; a < J.length; a++)J[a].vis = i(J[a], 0, 0, J[a].block), J[a].vis.y = J[a].y, J[a].vis.x = J[a].x, K.addChild(J[a].vis)
    }

    function l(a, b, c, d, e, f) {
        r(a, b, c, d, e, f), g()
    }

    function m() {
        g();
        var a = I[0];
        I[0] = I[1], I[1] = a, j()
    }

    function n(a) {
        b.clean();
        var c = a.target.globalToLocal(a.stageX, a.stageY);
        l(I[I.length - 1].vis, c.x, c.y)
    }

    function o(a) {
        if (U) {
            var b = a.target.globalToLocal(a.stageX, a.stageY);
            s = I[I.length - 1].vis, q(s, b.x, b.y)
        }
    }

    function p(b, c, d, e, f, g) {
        var h, i, m, n = C / 2, o = E - C / 2, q = 0, r = F - D / 2;
        b || c || !d ? (h = K.localToLocal(b, c, N), i = b, m = c) : (h = K.localToLocal(d.x, d.y, N), i = round(d.x), m = round(d.y)), d && (v = d.reqX, w = d.reqY, t = d.startX, u = d.startY, x = d.lastX, y = d.lastY);
        for (var s = h.x, B = h.y, H = 0; H < a.length; H++)for (var L = 0; L < a[H].length; L++)if (a[H][L] && a[H][L].vis && a[H][L].vis.getBounds()) {
            var M = C / 2, O = a[H][L].vis.x, P = a[H][L].vis.y;
            if (circlesColliding(s, B, M, O, P, M)) {
                var U = Math.round(B / D), V = 0;
                U % 2 != 0 && (V = -C / 2);
                var W = Math.round((s + V) / C);
                if (b || c || !d)return {i: U, j: W, x: i, y: m};
                if (!f) {
                    var X = -radToDeg(Math.atan2(N.x - d.startX, N.y - d.startY)), Y = radToDeg(Math.atan2(i - d.startX, m - d.startY)) + X;
                    Math.abs(Y) > 180 && (Y = Y > 0 ? -(360 - Math.abs(Y)) : 360 - Math.abs(Y));
                    var Z = function () {
                        for (var b = 0; b < a.length; b++)for (var c = 0; c < a[b].length; c++)if (a[b][c] && a[b][c].vis && a[b][c].vis.changeRect(K, n, q, o, r)) {
                            for (var d = 0; d < G.length; d++)G[d].endGame();
                            return removeTween(N), void(z = !0)
                        }
                    };
                    z && !A && (Z = null), TweenTo(N, N.x, N.y, null, null, null, null, null, null, Z, null, 1 * Y / 20)
                }
                if (a[U][W]) {
                    for (var $, _ = N.localToLocal(x, y, K), ab = _.x, bb = _.y; !$;)$ = p(ab, bb, null, !0), $ && 1 == $.stop && ($ = {
                        i: U,
                        j: W
                    }), ab += v, bb += w;
                    U = $.i, W = $.j, V = 0, U % 2 != 0 && (V = -C / 2)
                }
                a[U][W] && console.log("UUPS"), removeTween(d);
                {
                    N.localToLocal(C * W, D * U, K)
                }
                d.x = C * W - V, d.y = D * U;
                for (var cb = 0; cb < G.length; cb++)if (f)G[cb].createBounce(U, W, g, d), N.addChild(a[U][W].vis); else {
                    var db;
                    if (G[cb].createBounce(U, W, I[I.length - 1].kind, d), N.addChild(a[U][W].vis), I = G[cb].createNewShoot(), db = G[cb].update(U, W), J.length > 0 && (!db || 0 == db))if (numFall++, numFall >= S) {
                        numFall = 0, numNew = 0;
                        for (var eb = 0; eb < J.length; eb++)numNew++, l(J[eb].vis, 317 / __koefDisplay, 329 / __koefDisplay, !0, J[eb].kind)
                    } else I && j(); else I && j()
                }
                if (f) {
                    if (numNew--, 0 >= numNew) {
                        for (var fb, cb = 0; cb < G.length; cb++)fb = G[cb].createPerimetrCandy();
                        J = fb, k(), I && j()
                    }
                } else;
                return
            }
        }
        var gb, hb;
        if (!f && (n > i || q > m || i > o || m > r)) {
            if (e || (n > i || i > o ? (hb = 2 * m - u, gb = t) : (q > m || m > r) && (hb = u, gb = 2 * i - t), (n > i || i > o) && (q > m || m > r) && (hb = u, gb = t)), !e) {
                for (var $, ib = N.localToLocal(x, y, K), ab = ib.x, bb = ib.y; !$ && ($ = p(ab, bb, null, !0), !$ || 1 != $.stop);)ab += v, bb += w;
                i = $.x, m = $.y
            }
            if (!e) {
                if (R >= T) {
                    if (!b && !c) {
                        removeTween(d);
                        for (var jb = 0; jb < G.length; jb++)G[jb].createBounce(), I = G[jb].createNewShoot();
                        I && j(), d.rem()
                    }
                    return {x: i, y: m}
                }
                R++, t = i, u = m;
                var kb = Math.sqrt(Math.pow(gb - t, 2) + Math.pow(hb - u, 2));
                d ? (d.reqX = round((gb - t) / kb / __koefDisplay), d.reqY = round((hb - u) / kb / __koefDisplay), d.startX = t, d.startY = u) : (v = round((gb - t) / kb / __koefDisplay), w = round((hb - u) / kb / __koefDisplay))
            }
            return b || c || !d ? {
                stop: !0,
                x: i,
                y: m
            } : (d.x = i, d.y = m, removeTween(d), void TweenTo(d, i + d.reqX, m + d.reqY, .001 * Q, null, null, null, null, null, p, [null, null, d], null, !0))
        }
        var lb = Math.round(B / D), mb = 0;
        lb % 2 != 0 && (mb = -C / 2);
        Math.round((s + mb) / C);
        b || c || !d ? (x = s, y = B) : (d.lastX = s, d.lastY = B)
    }

    function q(a, c, d) {
        var e = K.localToLocal(a.x, a.y, N);
        x = e.x, y = e.y, R = 0, t = a.x, u = a.y;
        var f = Math.sqrt(Math.pow(c - t, 2) + Math.pow(d - u, 2));
        v = (c - t) / f / __koefDisplay, w = (d - u) / f / __koefDisplay;
        var g, h = t + v, i = u + w;
        for (b.start(t, u); !g;)g = p(h, i), g && g.x && g.y && (b.drawTo(g.x, g.y), h = g.x, i = g.y), g && g.stop && (g = null), h += v / (.001 * __freq * Q), i += w / (.001 * __freq * Q);
        K.addChild(b)
    }

    function r(a, b, c, d, e, f) {
        var g = K.localToLocal(a.x, a.y, N);
        a.lastX = g.x, a.lastY = g.y, R = 0, a.startX = a.x, a.startY = a.y;
        var h = Math.sqrt(Math.pow(b - a.startX, 2) + Math.pow(c - a.startY, 2));
        a.reqX = (b - a.startX) / h / __koefDisplay, a.reqY = (c - a.startY) / h / __koefDisplay, TweenTo(a, a.x + a.reqX, a.y + a.reqY, .001 * Q, f, null, null, null, null, p, [null, null, a, null, d, e], null, !0)
    }

    this.initialize();
    var s, t, u, v, w, x, y, z, A, B = d - 1, C = config.item.width / __koefDisplay, D = config.item.height / __koefDisplay, E = WIDTHGAME, F = HEIGHTGAME - config.gameY / __koefDisplay, G = new Array, H = a, I = b, J = c, K = this, L = new Array, M = new Array, N = (new Array, new createjs.Container), O = new createjs.Container, b = new BrokenLine, P = !0, Q = .5, R = 0;
    timeFall = .8, numNew = 0, numFall = 0, delayBang = .08, text_dy = 60 / __koefDisplay, text_speed = 1.2, allList = !0, timeScale = .5, delet = null;
    var S;
    S = config.lvl[B].numFall ? config.lvl[B].numFall : config.numFall;
    var T;
    T = config.lvl[B].numWall ? config.lvl[B].numWall : config.numWall;
    var U;
    U = "boolean" == typeof config.lvl[B].aim ? config.lvl[B].aim : config.aim;
    for (var V = 0, W = 0, X = 0; X < a.length; X++) {
        for (var Y = 0; Y < a[X].length; Y++) {
            if (a[X][Y]) {
                var Z = i(a[X][Y], V, W, a[X][Y].block);
                Z && (H[X][Y].vis = Z)
            }
            V += C
        }
        V = X % 2 == 0 ? C / 2 : 0, W += D
    }
    for (var X = 0; X < config.texts.length; X++)M[config.texts[X].text] = new createjs.Sprite(jsons["JSON1" + __disSuffiks]), M[config.texts[X].text].gotoAndStop("text_white_" + config.texts[X].text), M[config.texts[X].text].x = WIDTHGAME / 2 - M[config.texts[X].text].getBounds().width / 2, M[config.texts[X].text].y = HEIGHTGAME / 2 - M[config.texts[X].text].getBounds().height / 2 - config.gameY / __koefDisplay;
    var $ = new createjs.Shape;
    $.graphics.beginFill("#ff0000").drawRect(0, 0, E, F), $.alpha = .01, this.addChild($), N.mouseChildren = !1, this.addChild(N), this.addChild(O), N.x = E / 2, N.y = F / 2, N.regX = (a.length - 1) * C / 2 + C / 2, N.regY = (a[X].length - 1) * D / 2, this.x = 0, this.y = 0, removeAllTweens(), j(), k();
    var _ = new createjs.Shape;
    _.graphics.beginFill("#ff0000").drawRect(-42 / __koefDisplay, 0, 84 / __koefDisplay, 2 * D), setCoor(_, 320, -60), _.alpha = .01, this.addChild(_), this.registerObserver = function (a) {
        G.push(a)
    }, this.addAllListeners = function () {
        allList = !0, f()
    }, this.delAllListeners = function () {
        allList = !1, g()
    }, this.delAllListeners(), N.scaleX = N.scaleY = .2;
    var ab = function () {
        N.scaleX >= 1 && N.scaleY >= 1 && K.addAllListeners()
    }, bb = round(7 * Math.random() + 6);
    TweenTo(N, N.x, N.y, timeScale, null, null, null, 1, 1, ab, null, bb), this.del = function (a, b, c, d, e, i, j, k) {
        delet = !0;
        var l = "number" == typeof k ? k : delayBang;
        g();
        var m = 0, n = function (a) {
            if (m--, a && a.rem(), 0 >= m)for (var b = 0; b < G.length; b++)G[b].fall()
        }, o = 0, p = function () {
            return o >= a.length ? (d && d.apply(null, e), P = !0, void f()) : (H[a[o].i][a[o].j] && (P = !1, MusicCTRL.play("sound1"), h(a[o].i, a[o].j, n, m, b, c, i, j)), o++, void(0 == l ? p() : delet && delayOn(l, p)))
        };
        p()
    }, this.delButter = function (a) {
        L.push(H[a.i][a.j]), H[a.i][a.j] = null
    }, this.add = function (b) {
        for (var c = 0; c < b.length; c++)i(a[b[c].i][b[c].j], C * b[c].j, D * b[c].i)
    }, this.setFlagGO = function (a) {
        A = a
    }, this.grav = function () {
    }, this.addText = function () {
    }
}
function Goriz(a) {
    this.initialize();
    for (var b = a; b.getNumChildren() > 0;)b.removeChildAt(0);
    b.parent.addChild(this), this.x = b.x, this.y = b.y;
    var c = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    c.gotoAndStop("bomb_horizontal"), this.addChild(c), this.rem = function () {
        this.parent && this.parent.removeChild(this), b.rem()
    }, this.getPar = function () {
        return {goriz: !0}
    }
}
function Universal(a) {
    this.initialize();
    for (var b = a; b.getNumChildren() > 0;)b.removeChildAt(0);
    b.parent.addChild(this), this.x = b.x, this.y = b.y;
    var c = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    c.gotoAndStop("block_universal_1x1"), this.addChild(c), this.rem = function () {
        b.rem.apply(this)
    }, this.getPar = function () {
        return {universal: !0}
    }, this.changeRect = function (a, c, d, e, f) {
        return b.changeRect.apply(this, [a, c, d, e, f])
    }
}
function Vert(a) {
    this.initialize();
    for (var b = a; b.getNumChildren() > 0;)b.removeChildAt(0);
    b.parent.addChild(this), this.x = b.x, this.y = b.y;
    var c = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    c.gotoAndStop("bomb_vertical"), this.addChild(c), this.rem = function () {
        this.parent && this.parent.removeChild(this), b.rem()
    }, this.getPar = function () {
        return {vert: !0}
    }
}
function BrokenLine() {
    this.initialize();
    var a = 10 / __koefDisplay;
    indent = 4 / __koefDisplay;
    var b, c;
    masPunct = new Array, this.clean = function () {
        this.removeAllChildren()
    }, this.start = function (a, d) {
        this.clean(), masPunct = new Array, b = a, c = d
    }, this.drawTo = function (d, e) {
        for (var f = -radToDeg(Math.atan2(d - b, e - c)), g = b, h = c, i = distXY(b, c, d, e), j = i / (a + indent), k = (d - b) / j, l = (e - c) / j; i > a;) {
            var m = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
            m.gotoAndStop("punct"), m.regX = m.getBounds().width / 2, m.rotation = f, m.x = g, m.y = h, this.addChild(m), g += k, h += l, masPunct.push(m), i -= a + indent
        }
        b = d, c = e;
        for (var n = 1, o = 0; o < masPunct.length; o++)masPunct[o].alpha = n, n -= .8 / masPunct.length
    }
}
function Button(a, b, c, d, e, f) {
    this.initialize();
    var g = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    pod = "btn", e && (pod = e), g.gotoAndStop(pod);
    var h = "on";
    if (a) {
        var i = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
        i.gotoAndStop(a), i.regX = i.getBounds().width / 2, i.regY = i.getBounds().height / 2, i.x = g.getBounds().width / 2, i.y = g.getBounds().height / 2, b && c && setCoor(i, b, c), d && (i.rotation = d)
    }
    if (this.addChild(g), i && this.addChild(i), f) {
        var j = new FontText(ui, "Center");
        j.setText(f), j.x = this.getBounds().width / 2, j.y = this.getBounds().height / 2 - j.getBounds().height / 2, this.addChild(j)
    }
    this.changeFrame = function (a) {
        this.alpha = "on" == a ? 1 : .5, h = a
    }, this.changeBeetweenAnim = function (a, b) {
        return h == a ? (this.changeFrame(b), b) : (this.changeFrame(a), a)
    }
}
function GameOver(a, b) {
    this.initialize(), this.addChild(a);
    var c = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    c.gotoAndStop("windows-candy"), setCoor(c, 207, 28);
    var d = new Button(null, null, null, null, "btn_text", localization.replay);
    setCoor(d, 161, 455), d.addEventListener("click", function () {
        b.gotoLvl(0)
    });
    var e = new Button(null, null, null, null, "btn_text", localization.menu);
    setCoor(e, 161, 604), e.addEventListener("click", function () {
        b.returnToMenu()
    });
    var f = new FontText(text, "Center");
    f.setText(localization.gameOver), setCoor(f, 320, 230), this.addChild(c), this.addChild(d), this.addChild(e), this.addChild(f)
}
function Interface(a) {
    function b() {
        for (var a = 0; a < c.length; a++)c[a].clickPause()
    }

    this.initialize();
    var c = new Array, d = 1, e = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    e.gotoAndStop("text_yellow_level"), setCoor(e, 100, 8);
    var f;
    if (a > 9) {
        f = new createjs.Container;
        for (var g = a.toString(), h = 0, i = 0; i < g.length; i++) {
            var j = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
            j.gotoAndStop("text_yellow_" + g[i]), setCoor(j, h), f.addChild(j), h += 30
        }
    } else f = new createjs.Sprite(jsons["JSON1" + __disSuffiks]), f.gotoAndStop("text_yellow_" + a);
    setCoor(f, 221, 8);
    var a = a - 1, k = new Text(jsons["JSON1" + __disSuffiks], "text_yellow_");
    k.x = WIDTHGAME - k.getBounds().width;
    var l = new Text(jsons["JSON1" + __disSuffiks], "text_yellow_");
    l.setText(config.lvl[a].reqPoints), l.x = WIDTHGAME - l.getBounds().width, l.y = 40 / __koefDisplay;
    var m = new ProgressBar("JSON1", "progress_back", "progress", 3, 3);
    setCoor(m, 503, 34);
    var n = new Button("icon_pause");
    setCoor(n, 12, 4), n.scaleX = .46, n.scaleY = .46;
    var o = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    o.gotoAndStop("mask_menu"), o.scaleX = o.scaleY = .5, setCoor(o, 278, -40);
    var p = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    p.gotoAndStop("menu_btn"), p.scaleX = .5, p.scaleY = .5, p.regX = 53 / __koefDisplay, p.regY = 24 / __koefDisplay, setCoor(p, 320, 4);
    var q = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    q.gotoAndStop("off_star"), setCoor(q, 598, 27);
    var r = config.lvl[a].reqNuts ? config.lvl[a].reqNuts : config.reqNuts, s = new FontText(goal);
    s.setText("0/" + r[1]), s.scaleX = .6, s.scaleY = .6, setCoor(s, 560, 5);
    var t = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    t.gotoAndStop("nut"), t.scaleX = .6, t.scaleY = .6, setCoor(t, 526, 2), this.addChild(m), this.addChild(n), this.addChild(o), this.addChild(q), this.addChild(s), this.addChild(t), this.addChild(p), this.setPoint = function (b, c) {
        k.setText(b), k.x = WIDTHGAME - k.getBounds().width;
        var d = null;
        b >= config.lvl[a].reqPoints && (d = function () {
            q.gotoAndStop("star"), c()
        });
        var e = b / config.lvl[a].reqPoints;
        return m.gotoLvl(100 * e, d), b >= config.lvl[a].reqPoints ? !0 : void 0
    }, this.setNut = function (a) {
        s.setText(a + "/" + r[1])
    }, this.addListeners = function () {
        n.addEventListener("click", b)
    }, this.delListeners = function () {
        n.removeEventListener("click", b)
    }, this.addStar = function (a, b) {
        var c = new createjs.Sprite(jsons["JSON2" + __disSuffiks], "star");
        this.addChild(c), c.scaleX = .5, c.scaleY = .5, c.x = 588 / __koefDisplay, c.y = 32 / __koefDisplay, c.play(), dragAndDrop(c), c.on("animationend", function (c) {
            c.target.stop(), a && a.apply(null, b)
        })
    }, this.rotatePinch = function () {
        var a = 180 * d;
        TweenTo(p, p.x, p.y, .2, null, null, null, null, null, null, null, null, null, a), d++
    }, this.registerObserver = function (a) {
        c.push(a)
    }, this.addListeners()
}
function Item(a) {
    function b() {
        getFlag(a) || !config.lvl[a - 1].tutorial ? choiseLocation("game", {lvl: a}) : choiseLocation("instruction", {
            lvl: a,
            tutor: config.lvl[a - 1].tutorial
        })
    }

    this.initialize();
    var c, d = getLvlStorage(a), e = new FontText(score, "Center");
    e.setText("");
    var f, g;
    if (g = new createjs.Sprite(jsons["JSON1" + __disSuffiks]), g.gotoAndStop("level_0star"), d ? (c = new createjs.Sprite(jsons["JSON1" + __disSuffiks]), c.gotoAndStop("level_on"), g.gotoAndStop("level_" + d.stars + "star"), this.addChild(c), this.addChild(g), this.addEventListener("click", function () {
        })) : (c = new createjs.Sprite(jsons["JSON1" + __disSuffiks]), c.gotoAndStop("level_off"), this.addChild(c)), a > 9) {
        f = new createjs.Container;
        for (var h = a.toString(), i = 0, j = 0; j < h.length; j++) {
            var k = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
            k.gotoAndStop("text_white_" + h[j]), setCoor(k, i), f.addChild(k), i += 30
        }
    } else f = new createjs.Sprite(jsons["JSON1" + __disSuffiks]), f.gotoAndStop("text_white_" + a);
    e.scaleX = .5, e.scaleY = .5, e.x = this.getBounds().width / 2 - 10 / __koefDisplay, e.y = 12 / __koefDisplay, this.addChild(e), f.x = this.getBounds().width / 2 - f.getBounds().width / 2, f.y = this.getBounds().height / 2 - f.getBounds().height / 2 - 7 / __koefDisplay, this.change = function (d) {
        e.setText(a), this.removeAllEventListeners(), c.gotoAndStop("level_on"), 0 == d && g.gotoAndStop("level_0star"), d && g.gotoAndStop("level_" + d + "star"), this.addChild(c), g && (this.addChild(g), setCoor(g, 4, 27)), this.addChild(e), this.addEventListener("click", function () {
            b()
        })
    }, this.open = function () {
        this.change()
    }
}
function LvlComplete(a, b) {
    function c() {
        m = !1, n && n.stop()
    }

    this.initialize(), this.addChild(a);
    var d = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    d.gotoAndStop("text_white_level"), setCoor(d, 219, 259);
    var e = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    e.gotoAndStop("line_stars"), setCoor(e, 152, 114);
    var f = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    f.gotoAndStop("text_white_complete"), setCoor(f, 188, 331);
    var g, h = new Button(null, null, null, null, "btn_text", localization.replay);
    setCoor(h, 161, 510), h.addEventListener("click", function () {
        c(), b.gotoLvl(0)
    });
    var i = new FontText(text, "Center");
    i.setText(localization.success), setCoor(i, 320, 177);
    var j = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    j.gotoAndStop("windows-stars_fon"), setCoor(j, 103, 139);
    var k, l, m, n, o = new createjs.Container;
    this.addChild(j), this.addChild(g), this.addChild(h), this.addChild(i), this.addChild(o), this.update = function (a) {
        o.removeAllChildren(), m = !0, MusicCTRL.play("sound4"), a.lvl < config.lvl.length ? (g = new Button(null, null, null, null, "btn_text", localization["continue"]), g.addEventListener("click", function () {
            c(), b.gotoLvl(1)
        })) : (g = new Button(null, null, null, null, "btn_text", localization.menu), g.addEventListener("click", function () {
            c(), b.returnToMenu()
        })), setCoor(g, 161, 635), o.addChild(g);
        var d = a.stars ? a.stars : 0, e = 0;
        d > 0 && (e = a.stars - a.news);
        var f = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
        f.gotoAndStop("stars_" + e), setCoor(f, 205, 19);
        for (var h = [[220 / __koefDisplay, -24 / __koefDisplay], [146 / __koefDisplay, 4 / __koefDisplay], [293 / __koefDisplay, 4 / __koefDisplay]], i = new Array, j = 1; 3 >= j; j++)i[j] = new createjs.Sprite(jsons["JSON2" + __disSuffiks], "an"), dragAndDrop(i[j]), i[j].x = h[j - 1][0], i[j].y = h[j - 1][1];
        l = function (a) {
            MusicCTRL.play("sound3"), i[a].play(), o.addChild(i[a]), i[a].on("animationend", function (b) {
                b.target.stop(), o.removeChild(i[a])
            })
        }, n = new StoreBoard(jsons["JSON1" + __disSuffiks], score), setCoor(n, 319, 375), o.addChild(f), o.addChild(n), k = function () {
            e++, f.gotoAndStop("stars_" + e), l(e), e < a.news && m ? delayOn(1, k) : m && n.start(a.points)
        }, 3 > e && a.news > 0 ? k() : n.start(a.points, __bg.ad)
    }
}
function Marker() {
    this.initialize();
    var a = new createjs.Shape;
    a.graphics.beginFill("#ff0000").drawRect(0, 0, 75 / __koefDisplay, 100 / __koefDisplay), setCoor(a, -10, -60), a.alpha = .01;
    var b = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    b.gotoAndStop("marker_off"), this.addChild(a), this.addChild(b), this.mouseChildren = !1, this.gotoAndStop = function (a) {
        b.gotoAndStop(a)
    }
}
function Modal() {
    this.initialize();
    var a = new createjs.Shape;
    a.graphics.beginFill("#000000").drawRect(0, 0, 640, 960), a.alpha = .5, setCoor(a, 0, -108);
    var b = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    b.gotoAndStop("bg_window"), setCoor(b, 320 - b.getBounds().width * __koefDisplay / 2, 372 - b.getBounds().height * __koefDisplay / 2)
}
function Pause(a, b) {
    this.initialize(), this.addChild(a);
    var c = new Button("icon_pause");
    if (setCoor(c, 258, 7), __audio_supported) {
        var d = new Button("icon_music_on");
        d.changeFrame("off"), setCoor(d, 367, 579), d.addEventListener("click", function () {
            var a = d.changeBeetweenAnim("off", "on");
            "off" == a ? MusicCTRL.off("music") : (MusicCTRL.on("music"), MusicCTRL.play("music"))
        });
        var e = new Button("icon_sound_on");
        e.changeFrame("off"), setCoor(e, 164, 579), e.addEventListener("click", function () {
            var a = e.changeBeetweenAnim("off", "on");
            "off" == a ? MusicCTRL.off("sound") : MusicCTRL.on("sound", 1)
        })
    }
    var f = new Button(null, null, null, null, "btn_text", localization["continue"]);
    setCoor(f, 161, 295), f.addEventListener("click", function () {
        b.resume(), __pause = !1
    });
    var g = new Button(null, null, null, null, "btn_text", localization.menu);
    setCoor(g, 161, 162), g.addEventListener("click", function () {
        b.returnToMenu(), __pause = !1
    });
    var h = new Button(null, null, null, null, "btn_text", localization.replay);
    setCoor(h, 161, 428), h.addEventListener("click", function () {
        b.gotoLvl(0), __pause = !1
    }), MusicCTRL.registerObserver(this), this.addChild(c), this.addChild(d), this.addChild(e), this.addChild(f), this.addChild(g), this.addChild(h), this.off = function (a) {
        "music" == a && d.changeFrame("off"), "sound" == a && e.changeFrame("off")
    }, this.on = function (a) {
        "music" == a && d.changeFrame("on"), "sound" == a && e.changeFrame("on")
    }
}
function Require(a, b) {
    this.initialize(), this.addChild(a);
    var c = .4, d = 1, e = 1, f = this, g = new createjs.Container, h = new createjs.Shape;
    h.graphics.beginFill("#000000").drawRect(-100 / __koefDisplay, 0 / __koefDisplay, 200 / __koefDisplay, 107 / __koefDisplay), h.alpha = .3, setCoor(h, 320, 98);
    var i = new createjs.Shape;
    i.graphics.beginFill("#000000").drawRect(-100 / __koefDisplay, 0 / __koefDisplay, 200 / __koefDisplay, 107 / __koefDisplay), i.alpha = .3, setCoor(i, 320, 96), g.mask = i;
    var j = new FontText(goal, "Center");
    j.setText(localization.require), setCoor(j, 320, 96);
    var k = new FontText(goal, "Center");
    k.setText(localization.points), setCoor(k, 320, 172), k.scaleX = .7, k.scaleY = .7;
    var l = new FontText(score, "Center");
    setCoor(l, 320, 135), l.scaleX = .4, l.scaleY = .4;
    var m = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    m.gotoAndStop("candy_left");
    var n = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    n.gotoAndStop("candy_right"), this.addChild(g), this.addChild(m), this.addChild(n), this.change = function (a) {
        this.alpha = 1, g.removeAllChildren(), g.addChild(h), g.addChild(j), g.addChild(k), g.addChild(l), setCoor(m, 262, 96), setCoor(n, 310, 96), l.setText(a.req), i.scaleX = .1, TweenTo(i, i.x, i.y, c, null, null, null, 1), TweenTo(m, m.x - 84 / __koefDisplay, m.y, c), TweenTo(n, n.x + 84 / __koefDisplay, n.y, c);
        var o = function () {
            b.resume("require")
        };
        delayOn(c + d, function () {
            TweenTo(f, f.x, f.y, e, o, null, .001)
        })
    }
}
function Tutorial(a) {
    this.initialize();
    var b = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    b.gotoAndStop("windows-tutorial_" + a), b.regX = b.getBounds().width / 2, b.regY = b.getBounds().height / 2, dragAndDrop(b), setCoor(b, 320, 352);
    var c = new FontText(goal, "Center");
    c.setText(localization["tutorial_" + a]), setCoor(c, 320, 544), this.addChild(b), this.addChild(c)
}
function About() {
    function a(a) {
        f[a] && (c.removeAllChildren(), c.addChild(f[a]), d = a, b.addChild(i), b.addChild(j)), 0 == a && b.removeChild(j), a == f.length - 1 && b.removeChild(i)
    }

    this.initialize();
    var b = this, c = new createjs.Container, d = 0, e = new Button("icon_help");
    setCoor(e, 259, 5);
    for (var f = new Array, g = 0; 4 > g; g++)f[g] = new Tutorial(g + 1);
    var h = new Button(null, null, null, null, "btn_text", localization.menu);
    h.scaleX = .7, h.scaleY = .7, setCoor(h, 200, 652), h.addEventListener("click", function () {
        choiseLocation("menu", null, null, !0)
    });
    var i = new Button("icon_play", 67, 56);
    i.scaleX = .7, i.scaleY = .7, setCoor(i, 540, 354), i.addEventListener("click", function () {
        a(d + 1)
    });
    var j = new Button("icon_play", 54, 58, 180);
    j.scaleX = .7, j.scaleY = .7, setCoor(j, 12, 354), j.addEventListener("click", function () {
        a(d - 1)
    }), this.addChild(e), this.addChild(h), this.addChild(i), this.addChild(j), this.addChild(c), a(d)
}
function Game() {
    function a(a) {
        for (var b = 0, c = 1; a >= c; c++)b += config.pointBlock;
        return b
    }

    function b() {
        var a, b, d, h = getLvlStorage(l);
        completeLvl(l, g, f);
        var i = getLvlStorage(l), j = i ? i.stars : 0, k = h ? h.stars : 0;
        a = "levelcomplete", b = function (a) {
            c.apply(a, ["complete", {lvl: l, stars: j, news: j - k, points: e}])
        }, d = [this], delayOn(.5, b, d)
    }

    function c(a, b) {
        "require" == a ? (m[a] || ("require" == a && (w = new Modal, w = new Require(w, this)), m[a] = w), m[a].change && m[a].change(b), i.delAllListeners(), k.addChild(m[a])) : choiseLocation(a, b)
    }

    function d(a) {
        __pause = !1, removeAllTweens(), this.removeAllChildren(), e = 0, f = 0, g = 0, j = new Interface(a), h = new Logic(a);
        var b = h.getMassive(), c = h.getShooter(), d = h.getNewCandy();
        i = new GameField(b, c, d, a, j.rotatePinch), setCoor(i, null, config.gameY), k = new createjs.Container, j.registerObserver(this), h.registerObserver(this), i.registerObserver(h), this.addChild(i), this.addChild(j), this.addChild(k)
    }

    this.initialize();
    var e, f, g, h, i, j, k, l, m = new Array;
    m.pause = new Modal, m.pause = new Pause(m.pause, this), this.update = function (a) {
        l = a.lvl, d.apply(this, [l]), c.apply(this, ["require", {lvl: l, req: config.lvl[l - 1].reqPoints, field: i}])
    }, this.del = function (b, c, d, e, f, g, h, j) {
        var k = a(h);
        i.del(b, c, d, e, f, g, k, j)
    }, this.add = function (a) {
        i.add(a)
    }, this.calc = function (c, d) {
        d && (g += d, j.setNut(g));
        for (var h, k = 0; k < config.texts.length; k++)c >= config.texts[k].blocks && (h = config.texts[k].text);
        var l = a(c);
        e += l, f++;
        var m = j.setPoint(e, b);
        m && (i.setFlagGO(!0), i.delAllListeners())
    }, this.grav = function () {
    }, this.gameOver = function () {
        c.apply(this, ["gameover"]), MusicCTRL.play("sound5")
    }, this.clickPause = function () {
        __pause = !0, c.apply(this, ["pause"])
    }, this.changeMusic = function () {
    }, this.returnToMenu = function () {
        choiseLocation("menu")
    }, this.resume = function (a) {
        if ("require" == a) {
            for (; k.getNumChildren() > 0;)k.removeChildAt(0);
            i.addAllListeners()
        } else choiseLocation("game", {dontUpd: !0})
    }, this.gotoLvl = function (a) {
        config.lvl[l + a - 1] && (l += a, getFlag(l) || !config.lvl[l - 1].tutorial ? (d.apply(this, [l]), c.apply(this, ["require", {
            lvl: l,
            req: config.lvl[l - 1].reqPoints
        }]), choiseLocation("game", {lvl: l})) : choiseLocation("instruction", {
            lvl: l,
            tutor: config.lvl[l - 1].tutorial
        }))
    }
}
function Instructions() {
    this.initialize();
    var a, b, c = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    c.gotoAndStop("windows-candy"), setCoor(c, 207, 28);
    var d = new Button(null, null, null, null, "btn_text", localization["continue"]);
    d.scaleX = .7, d.scaleY = .7, setCoor(d, 200, 652), d.addEventListener("click", function () {
        choiseLocation("game", {lvl: b})
    }), this.addChild(c), this.addChild(d), this.update = function (c) {
        a && a.parent && a.parent.removeChild(a), a = new Tutorial(c.tutor), this.addChild(a), b = c.lvl, setFlag(b)
    }
}
function LvlCtrl() {
    function a(a) {
        D.removeAllChildren(), p[a + 1] && D.addChild(B), p[a - 1] && D.addChild(A);
        for (var b = 0; b < p.length; b++)p[b].gotoAndStop("marker_off");
        p[a].gotoAndStop("marker_on"), TweenTo(r, WIDTHGAME / 2 - t / __koefDisplay / 2 - n / __koefDisplay * a, r.y, .5), q = a
    }

    function b(a) {
        F = a.stageX, delayOn(2, function () {
            F = null
        })
    }

    function c(b) {
        F && Math.abs(b.stageX - F) > 10 && (b.stageX - F < 0 && q + 1 < p.length ? (q++, a(q)) : b.stageX - F > 0 && q - 1 >= 0 && (q--, a(q)))
    }

    function d(b) {
        for (var c, d = 0; d < p.length; d++)p[d] == b.target && (c = d);
        p[c] && a(c)
    }

    this.initialize();
    for (var e = 100, f = 140, g = 0, h = config.lvl.length, i = 1, j = 5, k = 3, l = 0, n = 600, o = new Array, p = new Array, q = 0, r = new createjs.Container, s = new createjs.Container, t = j * e, u = k * f; h >= i;) {
        m = new Marker, setCoor(m, l), s.addChild(m), p.push(m), l += 80;
        for (var v = new createjs.Container, w = 0; k > w; w++)for (var x = 0; j > x; x++) {
            var y = new Item(i);
            setCoor(y, e * x, f * w), v.addChild(y), o[i] = y, i++, i > h && (w = k, x = j)
        }
        setCoor(v, g), r.addChild(v), g += n
    }
    r.x = WIDTHGAME / 2 - t / __koefDisplay / 2, r.y = HEIGHTGAME / 2 - u / __koefDisplay / 2, s.x = WIDTHGAME / 2 - s.getBounds().width / 2, s.y = 603 / __koefDisplay;
    var z = new createjs.Shape;
    z.graphics.beginFill("#000000").drawRect(0, 0, 640 / __koefDisplay, 744 / __koefDisplay), z.alpha = .01;
    var A = new Button("icon_play", 54, 58, 180);
    setCoor(A, 448, 574), A.scaleX = .8, A.scaleY = .8;
    var B = new Button("icon_play", 65, 56);
    setCoor(B, 448, 574), B.scaleX = .8, B.scaleY = .8;
    var C = new Button("icon_menu");
    setCoor(C, 79, 564), C.scaleX = .9, C.scaleY = .9;
    var D = new createjs.Container;
    this.addChild(z), this.addChild(r), this.addChild(s), this.addChild(D), this.addChild(C), A.addEventListener("click", function () {
        a(q - 1)
    }), B.addEventListener("click", function () {
        a(q + 1)
    }), C.addEventListener("click", function () {
        choiseLocation("menu")
    }), z.addEventListener("mousedown", b), z.addEventListener("pressup", c), s.addEventListener("pressup", d), a(q);
    var E = getOpen();
    if (o[1].open(), E)for (var w = 0; w < E.length; w++)o[E[w]] && o[E[w]].open();
    observerStorage(this), this.change = function (a, b, c) {
        c && o[c] && o[c].open(), o[a].change(b)
    };
    var F
}
function Menu() {
    this.initialize();
    var a = .5, b = new createjs.Bitmap(images.menu);
    b.y = HEIGHTGAME / 2 - b.getBounds().height / 2;
    var c = new Button("icon_play", 67, 56);
    setCoor(c, 259, 468), c.addEventListener("click", function () {
        choiseLocation("lvlctrl")
    });
    var d = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    d.gotoAndStop("btn_setting"), setCoor(d, 468, 428), d.addEventListener("click", function () {
        choiseLocation("setting")
    });
    var e = __bg.logo(), f = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    f.gotoAndStop("mask_menu"), setCoor(f, 233, 449);
    var g = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    g.gotoAndStop("menu_btn"), g.regX = 53 / __koefDisplay, g.regY = 24 / __koefDisplay, setCoor(g, 320, 520);
    var h = new createjs.Bitmap(images.mg_btn);
    setCoor(h, 470, 529), h.addEventListener("click", function () {
        __bg.moreGames()
    }), this.addChild(b), this.addChild(c), this.addChild(d), this.addChild(e), this.addChild(f), this.addChild(g), this.addChild(h), this.start = function () {
        TweenTo(c, c.x, c.y + 130 / __koefDisplay, a);
        var b = 180;
        TweenTo(g, g.x, g.y, a, null, null, null, null, null, null, null, null, null, b)
    }
}
function Setting() {
    this.initialize();
    var a = new Button("icon_setting");
    setCoor(a, 260, 4);
    var b = new createjs.Sprite(jsons["JSON1" + __disSuffiks]);
    b.gotoAndStop("logo.1"), setCoor(b, 291, 682), b.addEventListener("click", function () {
        window.open(config.url, "_blank")
    });
    var c = new Button(null, null, null, null, "btn_text", localization.help);
    if (setCoor(c, 167, 376), __audio_supported) {
        var d = new Button("icon_music_on");
        d.changeFrame("off"), setCoor(d, 367, 530), d.addEventListener("click", function () {
            var a = d.changeBeetweenAnim("off", "on");
            "off" == a ? MusicCTRL.off("music") : (MusicCTRL.on("music"), MusicCTRL.play("music"))
        });
        var e = new Button("icon_sound_on");
        e.changeFrame("off"), setCoor(e, 165, 530), e.addEventListener("click", function () {
            var a = e.changeBeetweenAnim("off", "on");
            "off" == a ? MusicCTRL.off("sound") : MusicCTRL.on("sound", 1)
        }), setCoor(c, 167, 376)
    }
    c.addEventListener("click", function () {
        choiseLocation("about")
    });
    var f = new Button(null, null, null, null, "btn_text", localization.menu);
    setCoor(f, 167, 219), f.addEventListener("click", function () {
        choiseLocation("menu", null, null, !0)
    }), MusicCTRL.registerObserver(this), this.addChild(a), this.addChild(d), this.addChild(e), this.addChild(c), this.addChild(f), this.off = function (a) {
        "music" == a && d.changeFrame("off"), "sound" == a && e.changeFrame("off")
    }, this.on = function (a) {
        "music" == a && d.changeFrame("on"), "sound" == a && e.changeFrame("on")
    }
}
function SplashScreen() {
    this.initialize();
    var a = new createjs.Shape;
    a.graphics.beginFill("#ffffff").drawRect(0, HEIGHTGAME / 2 - __HEIGHTBG / 2, __WIDTHBG, __HEIGHTBG);
    var b = new createjs.Bitmap(images.logo);
    b.x = WIDTHGAME / 2 - b.getBounds().width / 2, b.y = HEIGHTGAME / 2 - b.getBounds().height / 2, this.mouseChildren = !1, this.addChild(a), this.addChild(b)
}
function StoreBoard(a, b) {
    this.initialize();
    var c, d = {time: .2}, e = !0, f = 0, g = new FontText(b, "Center");
    setCoor(g, 0, 0), g.setText(f), this.addChild(g), this.start = function (a, b) {
        var h = 0;
        e = !1;
        var i = Math.round((a - f) * round(1 / __freq) / d.time);
        c = function () {
            if (h += round(1 / __freq), f >= a || 1 == e)return void(b && b());
            var d = i;
            f + d > a && (d = a - f), f += d, g.setText(f), delayOn(round(1 / __freq), c)
        }, delayOn(round(1 / __freq), c)
    }, this.set = function (a) {
        g.setText(a)
    }, this.stop = function () {
        e = !0
    }
}
function Text(a, b, c, d) {
    this.initialize();
    var e, f = new Array, g = new createjs.Container, h = 30;
    this.addChild(g), d && (h = d), c && (e = c), this.setText = function (c) {
        for (var d = c.toString(), i = (d.length - 1) * h, j = d.length - 1; j >= 0; j--)f[j] || (f[j] = new createjs.Sprite(a)), f[j].gotoAndStop(b + d[j]), setCoor(f[j], i), g.addChild(f[j]), i -= h;
        "Center" == e && (g.x = -(h / __koefDisplay / 2) * d.length)
    }, this.setText(0)
}
function TweenTo(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (a.x != b || a.y != c || a.alpha != g || a.scaleX != h || a.scaleY != i) {
        for (var o, p = d ? d : 1, q = g ? round(g) : a.alpha, h = h ? round(h) : a.scaleX, i = i ? round(i) : a.scaleY, n = n ? round(n) : a.rotation, r = e ? e : null, s = f, t = (b - a.x) / (delay * p), u = (c - a.y) / (delay * p), v = (n - a.rotation) / (delay * p), w = (h - a.scaleX) / (delay * p), x = (i - a.scaleY) / (delay * p), y = (q - a.alpha) / (delay * p), z = l ? round(l) : 0, A = {
            o: a,
            nonSt: m,
            rAl: q,
            sA: y,
            rX: b,
            rY: c,
            sX: t,
            sY: u,
            rScX: h,
            rScY: i,
            sScX: w,
            sScY: x,
            impuls: z,
            rRotate: n,
            speedRot: v,
            cb: r,
            p: s,
            et: j,
            pet: k
        }, B = 0; B < m_tweem.length; B++)m_tweem[B].o == a && (m_tweem[B] = A, o = !0);
        o || m_tweem.push(A), addToTicker(to)
    }
}
function removeTween(a) {
    for (var b = 0; b < m_tweem.length; b++)m_tweem[b].o == a && m_tweem.splice(b, 1)
}
function removeAllTweens() {
    m_tweem = new Array, delInTicker(to)
}
function init() {
    readStorage(), setNumPlay();
    var a = getNumPlay();
    0 == a && ADD_TO_HOME(), initLocations();
    var b = choiseLocation("menu");
    delayOn(.2, b.start), (__mus || "boolean" != typeof __mus) && (MusicCTRL.on("music"), MusicCTRL.on("sound", 1), MusicCTRL.play("music"))
}
var lvls = new Array, __open = new Array, flag = new Array, numPlay, obs = new Array;
extend(Block, createjs.Container), extend(Bomb, createjs.Container), extend(Color, createjs.Container), extend(Element, createjs.Container), extend(GameField, createjs.Container), extend(Goriz, createjs.Container), extend(Universal, createjs.Container), extend(Vert, createjs.Container), extend(BrokenLine, createjs.Container), extend(Button, createjs.Container), extend(GameOver, createjs.Container), extend(Interface, createjs.Container), extend(Item, createjs.Container), extend(LvlComplete, createjs.Container), extend(Marker, createjs.Container), extend(Modal, createjs.Container), extend(Pause, createjs.Container), extend(Require, createjs.Container), extend(Tutorial, createjs.Container), extend(About, createjs.Container), extend(Game, createjs.Container), extend(Instructions, createjs.Container), extend(LvlCtrl, createjs.Container), extend(Menu, createjs.Container), extend(Setting, createjs.Container), extend(SplashScreen, createjs.Container), extend(StoreBoard, createjs.Container), extend(Text, createjs.Container);
var m_tweem = new Array, delay = __freq, __pause, to = function () {
    if (!__pause) {
        for (var a = 0; a < m_tweem.length; a++) {
            if (Math.abs(m_tweem[a].rX - m_tweem[a].o.x) < Math.abs(m_tweem[a].sX) && !m_tweem[a].nonSt && (m_tweem[a].sX = m_tweem[a].rX - m_tweem[a].o.x), Math.abs(m_tweem[a].rY - m_tweem[a].o.y) < Math.abs(m_tweem[a].sY) && !m_tweem[a].nonSt && (m_tweem[a].sY = m_tweem[a].rY - m_tweem[a].o.y), Math.abs(m_tweem[a].rScX - m_tweem[a].o.scaleX) < Math.abs(m_tweem[a].sScX) && (m_tweem[a].sScX = m_tweem[a].rScX - m_tweem[a].o.scaleX), Math.abs(m_tweem[a].rScY - m_tweem[a].o.scaleY) < Math.abs(m_tweem[a].sScY) && (m_tweem[a].sScY = m_tweem[a].rScY - m_tweem[a].o.scaleY), Math.abs(m_tweem[a].rAl - m_tweem[a].o.alpha) < Math.abs(m_tweem[a].sA) && (m_tweem[a].sA = m_tweem[a].rAl - m_tweem[a].o.alpha), m_tweem[a].o.x = m_tweem[a].o.x + m_tweem[a].sX, m_tweem[a].o.y = m_tweem[a].o.y + m_tweem[a].sY, m_tweem[a].o.scaleX = m_tweem[a].o.scaleX + m_tweem[a].sScX, m_tweem[a].o.scaleY = m_tweem[a].o.scaleY + m_tweem[a].sScY, m_tweem[a].o.alpha = m_tweem[a].o.alpha + m_tweem[a].sA, m_tweem[a].impuls)if (m_tweem[a].o.rotation = m_tweem[a].o.rotation + m_tweem[a].impuls, Math.abs(m_tweem[a].impuls) > .1) {
                var b = .98 * m_tweem[a].impuls;
                m_tweem[a].impuls = b
            } else m_tweem[a].impuls && (m_tweem[a].impuls = !1); else m_tweem[a].speedRot && (m_tweem[a].o.rotation = m_tweem[a].o.rotation + m_tweem[a].speedRot);
            if (m_tweem[a].et && m_tweem[a].et.apply(null, m_tweem[a].pet), m_tweem[a] && round(m_tweem[a].o.x) == round(m_tweem[a].rX) && round(m_tweem[a].o.y) == round(m_tweem[a].rY) && round(m_tweem[a].o.alpha) == round(m_tweem[a].rAl) && round(m_tweem[a].o.rotation) == round(m_tweem[a].rRotate) && round(m_tweem[a].o.scaleX) == round(m_tweem[a].rScX) && round(m_tweem[a].o.scaleY) == round(m_tweem[a].rScY) && !m_tweem[a].impuls && !m_tweem[a].nonSt) {
                var c, d;
                m_tweem[a].cb && (c = m_tweem[a].cb, d = m_tweem[a].p), m_tweem.splice(a, 1), a--, c && c.apply(null, d)
            }
        }
        0 == m_tweem.length && delInTicker(to)
    }
};
config = {
    url: "http://www.gzacwl.com",
    appId: 0x7c6d4e777437,
    fb_name: "asdas",
    fb_caption: "asdas",
    fb_description: "asdas",
    item: {width: 44, height: 40},
    gameY: 63,
    bonuses: [{name: "bomb", "class": Bomb, req: [5, 5]}, {name: "color", "class": Color, req: [6, 6]}, {
        name: "vert",
        "class": Vert,
        req: [7, 7]
    }, {name: "goriz", "class": Goriz, req: [8, 800]}],
    pointBlock: 10,
    texts: [{text: "good", blocks: 5}, {text: "perfect", blocks: 6}, {text: "great", blocks: 7}, {
        text: "excellent",
        blocks: 8
    }, {text: "levelcomplete", blocks: 8e4}],
    newCandyCoor: [[20, 320, 620], [20, 320, 620]],
    numForDel: 3,
    numWall: 3,
    numFall: 4,
    aim: !0,
    reqNuts: [1, 2],
    objects: {
        block_blue_1x1: {color: "blue"},
        block_green_1x1: {color: "green"},
        block_pink_1x1: {color: "pink"},
        block_red_1x1: {color: "red"},
        block_violet_1x1: {color: "violet"},
        block_yellow_1x1: {color: "yellow"},
        center: {color: "center"},
        nut: {color: "nut"}
    },
    suffix: ["_1x1"],
    colors: ["block_blue", "block_green", "block_pink", "block_red", "block_violet", "block_yellow", "univ", "bomb"],
    numRand: 6,
    numRandShoot: 7,
    lvl: [{colors: [1, 3], reqPoints: 150, tutorial: 1, newCandyCoor: [[], []]}, {
        colors: [1, 2, 3],
        reqPoints: 180,
        newCandyCoor: [[], []]
    }, {colors: [1, 2, 3], reqPoints: 210, tutorial: 2, newCandyCoor: [[], []]}, {
        colors: [2, 3],
        reqPoints: 150,
        tutorial: 3,
        newCandyCoor: [[], []]
    }, {colors: [1, 2, 3], reqPoints: 240, newCandyCoor: [[], []]}, {
        colors: [1, 2, 3],
        reqPoints: 360,
        tutorial: 4,
        newCandyCoor: [[320], [320]]
    }, {colors: [1, 2, 3], reqPoints: 580, newCandyCoor: [[320], [320]]}, {
        colors: [1, 2, 3, 4, 5, 6],
        reqPoints: 600,
        newCandyCoor: [[20, 320], [20, 320]]
    }, {colors: [1, 2, 3, 6], reqPoints: 400, newCandyCoor: [[320, 620], [320, 620]]}, {
        colors: [1, 2, 3, 6],
        reqPoints: 300,
        newCandyCoor: [[320], [320]]
    }, {colors: [1, 2, 3, 5], reqPoints: 380, newCandyCoor: [[320], [320]]}, {
        colors: [1, 2, 3, 5, 6],
        reqPoints: 680,
        newCandyCoor: [[320], [320]]
    }, {colors: [1, 2, 3, 5, 6], reqPoints: 680, newCandyCoor: [[20, 320], [20, 320]]}, {
        colors: [1, 2, 3, 5, 6],
        reqPoints: 820,
        newCandyCoor: [[320, 620], [320, 620]]
    }, {colors: [1, 2, 3, 5, 6], reqPoints: 730, newCandyCoor: [[320], [320]]}, {
        colors: [1, 2, 3, 5, 6],
        reqPoints: 1100,
        newCandyCoor: [[320], [320]]
    }, {colors: [1, 2, 3, 5, 6], reqPoints: 600, newCandyCoor: [[320], [320]]}, {
        colors: [1, 2, 3, 5, 6],
        reqPoints: 700,
        newCandyCoor: [[320], [320]]
    }, {colors: [1, 2, 3, 5, 6], reqPoints: 500, newCandyCoor: [[320, 620], [320, 620]]}, {
        colors: [1, 2, 3, 4, 5, 6],
        reqPoints: 1100,
        newCandyCoor: [[320], [320]]
    }, {colors: [1, 2, 3, 4, 5, 6], reqPoints: 830, newCandyCoor: [[320], [320]]}, {
        colors: [1, 2, 3, 4, 5, 6],
        reqPoints: 1020,
        newCandyCoor: [[320], [320]]
    }, {colors: [1, 2, 3, 4, 5, 6], reqPoints: 1150, newCandyCoor: [[320], [320]]}, {
        colors: [1, 2, 3, 4, 5, 6],
        reqPoints: 1400,
        newCandyCoor: [[320], [320]]
    }, {colors: [1, 2, 3, 4, 5, 6], reqPoints: 860, newCandyCoor: [[320], [320]]}, {
        colors: [1, 2, 3, 4, 5, 6],
        reqPoints: 1100,
        newCandyCoor: [[320], [320]]
    }, {colors: [1, 2, 3, 4, 5, 6], reqPoints: 1400, newCandyCoor: [[320], [320]]}, {
        colors: [1, 2, 3, 4, 5, 6, 7],
        reqPoints: 1600,
        newCandyCoor: [[320], []]
    }, {colors: [1, 2, 3, 4, 5, 6, 7], reqPoints: 1470, newCandyCoor: [[], []]}, {
        colors: [1, 2, 3, 4, 5, 6, 7],
        reqPoints: 1600,
        newCandyCoor: [[], []]
    }]
}, _field = {lvls: [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 3, 9, 0 / 0, 9, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 9, 1, 2, 9, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0 / 0, 2, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 3, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 1, 3, 3, 1, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 3, 2, 0 / 0, 2, 3, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 9, 2, 3, 3, 2, 9, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 2, 7, 0, 0, 7, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 3, 3, 0 / 0, 3, 3, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 2, 2, 9, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0 / 0, 3, 3, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 8, 2, 2, 2, 2, 2, 9, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 9, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 1, 2, 1, 0 / 0, 1, 2, 1, 3, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 9, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 7, 2, 2, 2, 7, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 2, 3, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 2, 3, 1, 2, 2, 1, 3, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 9, 1, 2, 3, 0 / 0, 3, 2, 1, 9, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 3, 1, 2, 2, 1, 3, 2, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 3, 1, 1, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 2, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 7, 2, 2, 2, 7, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 6, 8, 8, 6, 6, 8, 8, 6, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 6, 6, 9, 6, 6, 6, 9, 6, 6, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0], [0, 0, 0, 0, 0, 6, 6, 6, 6, 0 / 0, 6, 6, 6, 6, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0], [0, 0, 0, 0, 0, 6, 6, 8, 6, 6, 6, 8, 6, 6, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 6, 6, 8, 8, 8, 8, 6, 6, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 6, 8, 8, 8, 6, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 6, 6, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 2, 3, 9, 2, 3, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 6, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 7, 6, 6, 0 / 0, 6, 6, 7, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 3, 2, 2, 3, 6, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 3, 2, 9, 3, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 1, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 7, 1, 7, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 6, 2, 0, 0, 2, 6, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 6, 1, 9, 1, 0 / 0, 1, 9, 1, 6, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 6, 2, 0, 0, 2, 6, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 7, 1, 7, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 5, 1, 2, 2, 1, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 5, 5, 9, 5, 5, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 3, 5, 5, 3, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 7, 0 / 0, 7, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 2, 5, 5, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 5, 5, 9, 5, 5, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 5, 1, 3, 3, 1, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 5, 5, 0, 5, 5, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 6, 1, 6, 6, 1, 6, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 9, 5, 8, 0 / 0, 9, 5, 8, 3, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 5, 1, 5, 5, 1, 5, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 6, 6, 0, 6, 6, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 5, 2, 2, 0 / 0, 2, 1, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 3, 3, 3, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 7, 2, 2, 2, 7, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 3, 9, 3, 3, 9, 3, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 3, 3, 2, 3, 3, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 5, 5, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 3, 5, 0, 0, 6, 3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 5, 0, 5, 0, 6, 0, 6, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 5, 0, 3, 7, 3, 3, 0, 6, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 3, 5, 2, 9, 2, 6, 3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 5, 5, 5, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 8, 3, 0 / 0, 3, 8, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 6, 6, 5, 5, 5, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 3, 2, 6, 9, 6, 1, 3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 0, 3, 3, 7, 3, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 3, 2, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 3, 6, 3, 1, 5, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 5, 1, 1, 3, 2, 6, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 3, 3, 7, 9, 5, 2, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 6, 2, 5, 1, 2, 6, 8, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 2, 3, 1, 3, 0 / 0, 3, 3, 6, 5, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 5, 8, 6, 5, 5, 6, 2, 7, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 5, 1, 3, 1, 2, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 3, 2, 5, 7, 9, 3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 6, 3, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 8, 6, 0, 0, 0, 0, 0, 6, 8, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 6, 6, 0, 0, 0, 0, 0, 0, 6, 6, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 5, 5, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 6, 6, 6, 6, 6, 6, 5, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 5, 3, 3, 9, 1, 1, 2, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 5, 5, 3, 3, 1, 1, 1, 2, 2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 7, 6, 7, 7, 0 / 0, 7, 7, 6, 7, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 6, 5, 3, 3, 3, 1, 1, 2, 2, 6, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 5, 3, 3, 9, 1, 1, 2, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 6, 6, 6, 6, 6, 6, 5, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 5, 5, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 6, 6, 0, 0, 0, 0, 0, 0, 6, 6, 0, 0, 0, 0], [0, 0, 0, 0, 0, 8, 6, 0, 0, 0, 0, 0, 6, 8, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 6, 0, 5, 5, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 6, 5, 5, 5, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 9, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 0, 0, 5, 5, 5, 6, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 2, 2, 0, 5, 0 / 0, 0, 6, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0, 2, 0, 0, 2, 0, 6, 6, 0, 0, 0, 0, 0, 0], [0, 0, 0, 8, 0, 2, 2, 2, 2, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 3, 2, 2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 8, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 5, 6, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 2, 0, 0, 6, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 3, 9, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 6, 1, 6, 1, 0 / 0, 1, 6, 1, 6, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 3, 7, 0, 0, 5, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 6, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 6, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 6, 3, 6, 3, 6, 3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 6, 7, 6, 7, 6, 7, 6, 7, 6, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 0, 0, 0, 0], [0, 0, 0, 0, 2, 2, 2, 2, 2, 0 / 0, 2, 2, 2, 2, 2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 9, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 4, 2, 3, 1, 3, 2, 4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 4, 1, 3, 5, 5, 3, 4, 4, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 4, 5, 5, 2, 8, 2, 5, 5, 4, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 4, 4, 3, 2, 1, 1, 2, 3, 2, 4, 0, 0, 0, 0], [0, 0, 0, 0, 4, 1, 6, 9, 6, 0 / 0, 6, 9, 6, 1, 4, 0, 0, 0, 0], [0, 0, 0, 0, 0, 4, 2, 3, 2, 1, 1, 2, 3, 2, 4, 0, 0, 0, 0], [0, 0, 0, 0, 0, 4, 5, 5, 2, 8, 2, 5, 5, 4, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 4, 1, 3, 5, 5, 3, 4, 4, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 4, 2, 3, 1, 3, 2, 4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 6, 1, 1, 7, 4, 4, 2, 1, 4, 2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 6, 5, 5, 6, 6, 3, 3, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 6, 1, 1, 9, 4, 4, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 6, 5, 5, 0 / 0, 6, 3, 3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 6, 1, 1, 9, 4, 4, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 6, 5, 5, 6, 6, 3, 3, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 2, 1, 2, 6, 1, 1, 7, 4, 4, 2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 4, 7, 4, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 4, 2, 2, 4, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 4, 2, 0, 2, 4, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 4, 2, 0, 0, 2, 4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 4, 2, 8, 2, 4, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 6, 6, 3, 3, 6, 6, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 7, 9, 5, 0 / 0, 5, 9, 7, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 6, 6, 3, 3, 6, 6, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 4, 2, 8, 2, 4, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 4, 2, 0, 0, 2, 4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 4, 2, 0, 2, 4, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 4, 2, 2, 4, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 4, 7, 4, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 5, 2, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 6, 3, 8, 3, 6, 6, 4, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 5, 5, 3, 3, 6, 8, 6, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 5, 9, 5, 3, 6, 6, 6, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 4, 5, 5, 5, 0 / 0, 5, 5, 5, 6, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 6, 6, 6, 3, 5, 9, 5, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 6, 8, 6, 3, 3, 5, 5, 4, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 4, 6, 6, 3, 8, 3, 2, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 2, 1, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 1, 4, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 6, 2, 6, 6, 3, 6, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 2, 3, 1, 4, 5, 5, 4, 2, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 8, 4, 6, 3, 4, 2, 7, 8, 5, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 5, 1, 8, 5, 3, 4, 3, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 2, 7, 4, 6, 1, 2, 1, 1, 6, 0, 0, 0, 0], [0, 0, 0, 0, 6, 4, 3, 1, 6, 0 / 0, 5, 9, 2, 5, 4, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 3, 8, 5, 2, 5, 4, 6, 1, 6, 0, 0, 0, 0], [0, 0, 0, 0, 0, 7, 1, 1, 6, 5, 7, 3, 1, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 4, 8, 4, 5, 4, 2, 9, 4, 8, 3, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 2, 1, 5, 8, 1, 3, 6, 5, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 6, 3, 2, 4, 5, 3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 5, 4, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 3, 5, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 6, 4, 1, 2, 3, 4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 6, 2, 4, 1, 9, 2, 4, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 5, 2, 0 / 0, 4, 5, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 3, 2, 5, 1, 2, 4, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 3, 6, 1, 3, 9, 6, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 6, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 4, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 2, 5, 2, 1, 3, 3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 4, 2, 5, 2, 1, 3, 6, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 6, 4, 2, 5, 2, 3, 6, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 4, 2, 9, 3, 6, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 3, 6, 4, 2, 3, 6, 2, 4, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 7, 1, 5, 3, 0 / 0, 5, 1, 5, 7, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 1, 3, 6, 4, 5, 6, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 5, 3, 6, 9, 4, 5, 3, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 3, 6, 3, 2, 4, 5, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 3, 6, 3, 1, 2, 4, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 6, 3, 1, 2, 2, 4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 5, 1, 1, 3, 3, 6, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 4, 5, 6, 2, 4, 4, 6, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 4, 6, 7, 2, 1, 5, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 2, 2, 1, 9, 1, 5, 2, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 5, 7, 3, 1, 6, 3, 3, 4, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 4, 4, 3, 0 / 0, 6, 1, 1, 4, 2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 3, 2, 1, 1, 4, 4, 5, 5, 2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 6, 1, 2, 5, 9, 6, 6, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 6, 1, 5, 6, 2, 1, 3, 3, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 3, 3, 6, 2, 6, 1, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 4, 4, 1, 1, 6, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 2, 5, 6, 1, 4, 6, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 6, 3, 1, 3, 1, 2, 5, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 1, 5, 2, 5, 6, 3, 4, 1, 5, 0, 0, 0, 0], [0, 0, 0, 0, 2, 3, 2, 6, 1, 3, 2, 6, 6, 5, 2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 4, 6, 4, 6, 9, 4, 2, 3, 4, 0, 0, 0, 0], [0, 0, 0, 0, 5, 2, 3, 1, 2, 0 / 0, 1, 5, 4, 1, 6, 0, 0, 0, 0], [0, 0, 0, 0, 0, 6, 1, 2, 4, 1, 6, 3, 2, 3, 5, 0, 0, 0, 0], [0, 0, 0, 0, 2, 4, 5, 1, 5, 2, 5, 1, 5, 6, 6, 0, 0, 0, 0], [0, 0, 0, 0, 0, 2, 6, 4, 6, 3, 4, 2, 4, 1, 3, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 1, 2, 1, 9, 5, 3, 2, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 3, 6, 5, 4, 1, 6, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 6, 5, 4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 5, 4, 6, 2, 3, 1, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 4, 6, 3, 2, 5, 1, 2, 6, 3, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 2, 1, 3, 2, 3, 5, 2, 6, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 2, 6, 5, 2, 1, 6, 2, 1, 3, 5, 0, 0, 0, 0], [0, 0, 0, 0, 4, 1, 2, 3, 9, 0 / 0, 9, 3, 2, 4, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 3, 1, 2, 6, 1, 2, 5, 6, 2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 6, 2, 5, 3, 2, 3, 1, 2, 3, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 4, 3, 6, 2, 1, 5, 2, 3, 6, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 4, 3, 2, 6, 1, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 5, 6, 3, 2, 4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 6, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 6, 1, 2, 3, 6, 5, 8, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 5, 4, 6, 2, 3, 1, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 6, 3, 2, 5, 1, 2, 6, 3, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 2, 1, 3, 2, 3, 5, 2, 6, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 2, 6, 5, 2, 1, 6, 2, 1, 3, 5, 6, 0, 0, 0], [0, 0, 0, 2, 4, 1, 2, 3, 9, 0 / 0, 9, 3, 2, 4, 1, 2, 0, 0, 0], [0, 0, 0, 0, 6, 5, 3, 1, 2, 6, 1, 2, 5, 6, 2, 1, 0, 0, 0], [0, 0, 0, 0, 0, 6, 2, 5, 3, 2, 3, 1, 2, 3, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 3, 6, 2, 1, 5, 2, 3, 6, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 4, 3, 2, 6, 1, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 8, 5, 6, 3, 2, 4, 6, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 6, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]};
var curLang = "en", loc = {
    en: {//英文
        menu: "Menu",
        "continue": "Continue",
        replay: "Replay",
        help: "Help",
        tutorial_1: ["Shoot to candies of the same color!", "Reach your points and release the nuts!"],
        tutorial_2: ["Touch and hold to use the riflescope line.", "Release when you're sure."],
        tutorial_3: ["Universal candy can take any color. Use", "it for merging the groups of the same color."],
        tutorial_4: ["Touch the candy machine", "to change the order of candies."],
        gameOver: ["Game", "over!"],
        success: ["Level", "complete!"],
        require: ["require"],
        points: ["points"]
    },
    cn: {//中文
        menu: "菜单",
        "continue": "继续",
        replay: "重玩",
        help: "帮助",
        tutorial_1: ["射击相同颜色的糖果!", "释放指定区域内的坚果!"],
        tutorial_2: ["触摸并按住用枪瞄线。", "当你确定的时候释放。"],
        tutorial_3: ["万能糖果可以当作任何颜色来使用。", "用于合并同一颜色的组。"],
        tutorial_4: ["触摸糖果机", "来改变糖果的顺序。"],
        gameOver: ["游戏", "结束!"],
        success: ["Level", "complete!"],
        require: ["require"],
        points: ["points"]
    }
};
localization = loc[curLang];